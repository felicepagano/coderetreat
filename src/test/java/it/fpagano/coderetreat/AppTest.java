/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package it.fpagano.coderetreat;

import static it.fpagano.coderetreat.Cell.LIVE;
import static it.fpagano.coderetreat.Cell.DEAD;
import static java.util.Collections.emptySet;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class AppTest {

    @Test
    @DisplayName("ALIVE cell is represented with a *")
    void whenCellIsAliveThenItIsATimesSymbol() {
        assertEquals("*", App.show.apply(LIVE));
    }

    @Test
    @DisplayName("ALIVE cell is represented with a *")
    void whenCellIsDeadThenItIsADotSymbol() {
        assertEquals(".", App.show.apply(DEAD));
    }

    @Test
    @DisplayName("DEAD cell with no neighborn is still dead")
    void test() {
        assertEquals(DEAD, App.rule.apply(DEAD, 0));
    }

    @Test
    @DisplayName("Any live cell with two or three neighbors survives.")
    void anyLiveCellWithTwoOrThreeNeighborsSurvives() {
        assertEquals(LIVE, App.rule.apply(DEAD, 0));
    }

    @Test
    @DisplayName("Any dead cell with three live neighbors becomes a live cell.")
    void anyDeadCellWithThreeLiveNeighborsBecomesALiveCell() {
        assertEquals(LIVE, App.rule.apply(DEAD, 3));
    }

    @Test
    @DisplayName("All other live cells die in the next generation. Similarly, all other dead cells stay dead.")
    void allOtherLiveCellsDieInTheNextGenerationSimilarlyAllOtherDeadCellsStaydead() {

    }
}
